name: List ECR Images of User-API

on:
  workflow_dispatch:

env:
  REPO_NAME: Palatepower77/palate-app-user-api
  AWS_REGION: ap-south-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: palate-app-user-api           # set this to your Amazon ECR repository name
  ECS_SERVICE: palate-user-api-service                 # set this to your Amazon ECS service name
  ECS_CLUSTER: palate-app-dev-cluster                 # set this to your Amazon ECS cluster name
  #ECS_TASK_DEFINITION: .aws/task-definition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  #CONTAINER_NAME: palate-development-container           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout private tools
      uses: actions/checkout@v3
      with:
        repository: ${{ env.REPO_NAME }}
        token: ${{ secrets.GIT_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1      

    - name: Get list of Image
      #run: aws ecr list-images --repository-name ${{ env.ECR_REPOSITORY }}
      run: aws ecr describe-images --repository-name ${{ env.ECR_REPOSITORY }} --query 'sort_by(imageDetails,& imagePushedAt)[*]'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
